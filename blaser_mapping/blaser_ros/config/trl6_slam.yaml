%YAML:1.0

sensor_type: 0 # 0 for blaser, 1 for pipeblaser

#common parameters
imu_topic: "/imu"
laser_topic: "/laser_detector/laser_points"
image_visual_topic: "/blaser_camera/image_hexp"
image_profile_topic: "/blaser_camera/image_lexp"
output_path: "/home/blaser/Desktop/vins_output"

# camera

# 0821 LL using KB model 
model_type: KANNALA_BRANDT
camera_name: camera
image_width: 1000
image_height: 700
projection_parameters:
   k2: -1.6442621295975660e-01
   k3: 3.0797322841285522e-02
   k4: -3.4880451836893055e-02
   k5: 1.8922706417464980e-02
   mu: 7.0181883970036540e+02
   mv: 7.0317268581495978e+02
   u0: 5.0629495538746147e+02
   v0: 2.1660916321486852e+02

# # 0820 DC  version
# model_type: MEI
# camera_name: camera
# image_width: 1000
# image_height: 700
# mirror_parameters:
#    xi: 3.1993163015418709e+01
# distortion_parameters:
#    k1: -1.1057655507699939e+01
#    k2: 4.1476619251102575e+03
#    p1: -3.5190907287160678e-02
#    p2: 2.2439209402131115e-02
# projection_parameters:
#    gamma1: 2.3106557046229165e+04
#    gamma2: 2.3149102246138438e+04
#    u0: 5.0471425675203875e+02
#    v0: 2.1937935969106067e+02

# # 0820 LL working version
# model_type: MEI
# camera_name: camera
# image_width: 1000
# image_height: 700
# mirror_parameters:
#    xi: 3.2012119754785829e+01
# distortion_parameters:
#    k1: -1.1061216580375628e+01
#    k2: 4.1608246878212613e+03
#    p1: -3.5211358574601163e-02
#    p2: 2.2452561933505050e-02
# projection_parameters:
#    gamma1: 2.3119833376479648e+04
#    gamma2: 2.3162403001089599e+04
#    u0: 5.0471423124456055e+02
#    v0: 2.1937936021168335e+02


# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.
#If you choose 0 or 1, you should write down the following matrix.
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [-0.99961933, -0.00808748, -0.02637793,
          0.02638251, -0.0004602,  -0.99965182,
          0.00807252, -0.99996719,  0.00067339]
   
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   # data: [0.00416818, 0.02023904, -0.00090114] #from Kalibr
   data: [0.0135, 0.013, -0.0094] # from CAD

#feature traker paprameters
max_cnt: 100            # max feature number in feature tracking
min_dist: 20            # min distance between two features
corner_quality: 0.01
freq: 0                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 0             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.022  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 30.0 # 30 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2
gyr_n: 0.02        # gyroscope measurement noise standard deviation.     #0.05
acc_w: 0.01         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 2.0e-5       # gyroscope bias random work noise standard deviation.     #4.0e-5

#acc_n: 0.2 #0.01          # accelerometer measurement noise standard deviation. #0.2
#gyr_n: 0.05 #0.0025         # gyroscope measurement noise standard deviation.     #0.05
#acc_w: 0.02 #0.001         # accelerometer bias random work noise standard deviation.  #0.02
#gyr_w: 4.0e-5 #2.0e-6       # gyroscope bias random work noise standard deviation.     #4.0e-5


g_norm: 9.80665     # gravity magnitude

#loop closure parameters
loop_closure: 0                 # start loop closure
load_previous_pose_graph: 0     # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0          # useful in real-time and large project
pose_graph_save_path: "/home/ubuntu/Desktop/vins_output/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.0                            # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 1                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet).

static_initialization: 0

#visualization parameters
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.01      # size of camera marker in RVIZ
visualize_camera_line_width: 0.002

use_encoder: 0

# image parameters
width: 1000
height: 700
center_u: 5.0471423124456055e+02
center_v: 2.1937936021168335e+02

# laser triangulation parameters
# laser_plane: [-4613.02,3.924,-100,109.235] # old working ver
laser_plane: [-5992.34,34.5386,-100,140.78] #0821LL
# laser_plane: [-5719.46,31.6129,-100.0,134.645] # Daqian based on 0820LL
#laser plane: [-6801.8,45.8367,-100.0,159.858] # 0820LL data
#laser plane: [-10427.9,78.6371,-100.0,238.168] # 0819 data
laser_depth_range: [0.01, 1.0] # distance between 3d point & camera

# laser detection parameters
hue_min: 118
hue_max: 124
sat_min: 150
val_min: 70 # brightness
val_ratio: 0.05 # val_thresh = max(val_min, image_max_val * val_ratio)

segment_length_min: 1

laser_ROI: [500, 100, 0, 0] # boundary width on left, right, top, bottom

vis_laser_detection: 0
laser_horizontal: 0

#mask_file: "/home/pipe/catkin_ws/pipe_blaser_ws/src/pipe_blaser_ros/config/v2_mask.png"
mask_file: "/home/blaser/catkin_ws/blaser_ws/src/pipe_blaser_ros/config/mask_v2_170d.png"

